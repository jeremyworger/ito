{
  "rules": {
    "users": {
      "$uid": {
		    ".read": "auth != null && (auth.uid == $uid || root.child('friends').child($uid).child(auth.uid).exists() || root.child('requestKeys').child($uid).child(root.child('users').child(auth.uid).child('emailEscaped').val()).exists() || root.child('requestKeys').child($uid).child(root.child('passcodes').child(auth.uid).val()).exists())",
    		".write": "auth != null && auth.uid == $uid"
      }
    },
    "emails": {
      "$email": {
	      ".write": "auth != null && $email == (root.child('users').child(auth.uid).child('emailEscaped').val())",
        ".validate": "newData.val() == auth.uid"
      }
    },
    "friends": {
      "$uid": {
		    ".read": "auth != null && auth.uid == $uid",
    		".write": "auth != null && auth.uid == $uid"
      }
    },
    "requests": {
      "$code": {
        ".read": "auth != null && ($code == root.child('users').child(auth.uid).child('emailEscaped').val() || $code == root.child('passcodes').child(auth.uid).val())",
        ".write": "auth != null",
        ".validate": "!newData.exists() || root.child('emails').child($code).exists() || root.child('passcodeReg').child($code).exists()"
      }
    },
    "requestKeys": {
      "$uid": {
        "$code": {
          ".read": "auth != null && ($code == root.child('users').child(auth.uid).child('emailEscaped').val() || $code == root.child('passcodes').child(auth.uid).val())",
          ".write": "auth != null",
	        ".validate": "!newData.exists() || root.child('emails').child($code).exists() || root.child('passcodeReg').child($code).exists()"
        }
      }
    },
    "messages": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && (!data.exists() || auth.uid == $uid || root.child('friends').child($uid).child(auth.uid).exists())"
      }
    },
    "signals": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && (!data.exists() || auth.uid == $uid || root.child('friends').child($uid).child(auth.uid).exists())"
      }
    },
    "notifications": {
      ".indexOn": ["timestamp"],
      ".read": "auth != null",
      ".write": "auth != null && root.child('administrators').child(auth.uid).val() == true"
    },
    "lastNotificationChecked": {
      "$uid": {
	      ".read": "auth != null && $uid == auth.uid",
	      ".write": "auth != null && $uid == auth.uid"
      }
    },
    "administrators": {
      "$uid": {
        ".read": "auth != null && $uid == auth.uid"
      }
    },
    "passcodes": {
      "$uid": {
        ".read": "auth != null && $uid == auth.uid",
        ".write": "auth != null && $uid == auth.uid",
        ".validate": "newData.val().matches(/^[0-9a-zA-Z-_=]+$/) && !root.child('passcodeReg').child(newData.val()).exists()"
      }
    },
    "passcodeReg": {
      "$code": {
        ".write": "auth != null && $code == root.child('passcodes').child(auth.uid).val()",
        ".validate": "!data.exists() && $code.matches(/^[0-9a-zA-Z-_=]+$/)"
      }
    },
    "datastorescopes": {
      "$uid": {
        ".read": "auth != null && $uid == auth.uid",
        ".write": "auth != null && $uid == auth.uid",
        "$key": {
          ".validate": "(data.exists() && data.val() == newData.val()) || (!data.exists() && newData.isString() && newData.val().matches(/^(public|friends|private)$/))"
        }
      }
    },
    "datastore": {
      "$uid": {
        ".write": "auth != null && $uid == auth.uid",
				"$key": {
          ".read": "auth != null && (root.child('datastorescopes').child($uid).child($key).val() == 'public' || (root.child('datastorescopes').child($uid).child($key).val() == 'friends' && (root.child('friends').child($uid).child(auth.uid).exists() || $uid == auth.uid)) || (root.child('datastorescopes').child($uid).child($key).val() == 'private' && $uid == auth.uid))",
	        ".validate": "newData.hasChildren()"
	      }
      }
    }
  }
}